{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAGGU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACtBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IACrEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACpBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAjCzDS,SAASC,cAAc,QAC/BC,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBAOF,IALA,IAAIC,EAAaF,EAAEG,cAAcf,MAAMgB,cACjCC,EAAYL,EAAEG,cAAcG,KAAKF,cACjCG,EAAkBP,EAAEG,cAAcK,OAAOJ,cAGtCK,EAAI,EAAGA,GAAKF,EAAiBE,GAAK,EACzChC,EAAcgC,EAAGP,GACjBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('form');\nformRef.addEventListener('submit', onSubmit)\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  let firstDelay = e.currentTarget.delay.valueAsNumber;\n  const delayStep = e.currentTarget.step.valueAsNumber;\n  const amountOfPromise = e.currentTarget.amount.valueAsNumber;\n  \n\n  for (let i = 1; i <= amountOfPromise; i += 1) {\n    createPromise(i, firstDelay);\n    firstDelay += delayStep;\n  };\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise.then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","firstDelay","currentTarget","valueAsNumber","delayStep","step","amountOfPromise","amount","i"],"version":3,"file":"03-promises.13971895.js.map"}